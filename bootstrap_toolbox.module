<?php

/**
 * @file
 * Primary module hooks for Bootstrap Toolbox module.
 */

use Drupal\bootstrap_toolbox\Entity\BootstrapToolboxScope;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Template\Attribute;
use Drupal\bootstrap_toolbox\UtilityServiceInterface;

include_once __DIR__ . '/includes/bootstrap_toolbox.node_types.inc';
include_once __DIR__ . '/includes/bootstrap_toolbox.nodes.inc';
include_once __DIR__ . '/includes/bootstrap_toolbox.blocks.inc';
include_once __DIR__ . '/includes/bootstrap_toolbox.pages.inc';
include_once __DIR__ . '/includes/bootstrap_toolbox.fields.inc';
include_once __DIR__ . '/includes/bootstrap_toolbox.help.inc';

/**
 * Implements hook_form_system_theme_settings_alter
 */
function bootstrap_toolbox_form_system_theme_settings_alter(&$form, $form_state, $form_id = NULL){
  $theme = $form_state->getBuildInfo()['args'][0];
  $utilityService = \Drupal::service('bootstrap_toolbox.utility_service');

  $config = \Drupal::configFactory()->get("{$theme}.settings");
  $baseTheme = NULL;
  $third_party_settings = $config->get('third_party_settings') ?? NULL;
  if (isset($third_party_settings['bootstrap_toolbox']['base_theme'])) {
    $baseTheme = $third_party_settings['bootstrap_toolbox']['base_theme'];
  } 

  
  $form['third_party_settings']['bootstrap_toolbox'] = [
    '#type' => 'details',
    '#title' => t('Bootstrap Toolbox settings'),
  ];
  $form['third_party_settings']['bootstrap_toolbox']['base_theme'] = [
    '#type' => 'select',
    '#title' => t('Behavior settings'),
    '#options' => $utilityService->getBaseThemes(),
    '#empty_option' => t('None'),
    '#default_value' => $baseTheme,
  ];

  $form['#submit'][] = 'bootstrap_toolbox_theme_settings_submit';
  
}

function bootstrap_toolbox_theme_settings_submit($form, \Drupal\Core\Form\FormStateInterface $form_state){
  $theme = $form_state->getBuildInfo()['args'][0];
  \Drupal::configFactory()->getEditable("{$theme}.settings")
      ->set('third_party_settings.bootstrap_toolbox.base_theme', $form_state->getValue('base_theme'))
      ->save(TRUE);
}

/**
 * Implements hook_ENTITY_TYPE_access() for BootstrapToolboxScope entities.
 */
function bootstrap_toolbox_bootstrap_toolbox_scope_access(BootstrapToolboxScope $bootstrap_toolbox_scope, $operation, AccountInterface $account) {
  if ($operation == 'delete' && $bootstrap_toolbox_scope->get('system')) {
    // Negar el acceso si es un scope del sistema.
    return AccessResult::forbidden()->addCacheableDependency($bootstrap_toolbox_scope);
  }

  // Permitir otras operaciones o si no es un scope del sistema.
  return AccessResult::neutral();
}

/**
 * Implements hook_preprocess_HOOK() for nodes.
 */
function bootstrap_toolbox_preprocess_node(array &$variables) {
  $node = $variables['node'];
  foreach ($variables['content'] as $field_name => &$field_content) {
    if (is_array($field_content) && isset($field_content['#field_name'])) {
      if (isset($field_content['#third_party_settings']['bootstrap_toolbox']['settings'])) {
        $settings = $field_content['#third_party_settings']['bootstrap_toolbox']['settings'];

        if ($variables['content'][$field_name]['#items']->count()) {
          $utilityService = \Drupal::service('bootstrap_toolbox.utility_service');

          $wrapperId = $settings['wrapper'] ?? 'none';
          if ($wrapperId) {
            $wrapperClasses = $utilityService->getWrapperById($wrapperId);

            $wrapperStyleId = $settings['wrapper_style'] ?? 'none';
            if ($wrapperStyleId) {
              $wrapperStyle = $utilityService->getStyleById($wrapperStyleId);
              $wrapperClasses = $wrapperClasses . ' ' . $wrapperStyle;
            }
            $variables['content'][$field_name]['#prefix'] = '<div class="clearfix  ' . $wrapperClasses . ' ">';
            $variables['content'][$field_name]['#suffix'] = '</div>';
          }

          $styleId = $settings['style'] ?? 'none';
          if ($styleId) {
            $style = $utilityService->getStyleById($styleId) . ' clearfix';
            $variables['content'][$field_name]['#attributes'] = new Attribute();
            $variables['content'][$field_name]['#attributes']->addClass($style);
          }
        }
      }
    }
  }
}




/**
 * Update the known themes configuration.
 */
function bootstrap_toolbox_update_8001() {
  // Cargar la configuración actual.
  $config = \Drupal::service('config.factory')->getEditable('bootstrap_toolbox.known_themes');

  // Actualizar los valores.
  $knownthemes = [
    'bootstrap_barrio' => [
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '#main',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap5' => [
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.dialog-off-canvas-main-canvas main div',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap3' => [
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.main-container',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
  ];

  // Establecer la nueva configuración.
  $config->set('known_themes', $knownthemes)->save();
}


/**
 * Update the known themes configuration.
 */
function bootstrap_toolbox_update_8002() {
  // Cargar la configuración actual.
  $config = \Drupal::service('config.factory')->getEditable('bootstrap_toolbox.known_themes');

  // Actualizar los valores.
  $knownthemes = [
    'bootstrap_barrio' => [
    'name' => 'Bootstrap Barrio base theme',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '#main',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap5' => [
      'name' => 'Bootstrap 5',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.dialog-off-canvas-main-canvas main div',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap3' => [
      'name' => 'Bootstrap 3 for Drupal',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.main-container',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
  ];

  // Establecer la nueva configuración.
  $config->set('known_themes', $knownthemes)->save();
}

/**
 * Update the known themes configuration.
 */
function bootstrap_toolbox_update_8003() {
  // Cargar la configuración actual.
  $config = \Drupal::service('config.factory')->getEditable('bootstrap_toolbox.known_themes');

  // Actualizar los valores.
  $knownthemes = [
    'bootstrap_barrio' => [
    'name' => 'Bootstrap Barrio base theme',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '#main',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap5' => [
      'name' => 'Bootstrap 5',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.dialog-off-canvas-main-canvas main div',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
    'bootstrap' => [
      'name' => 'Bootstrap 3 for Drupal',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.main-container',
      'main_area_class' => 'container-fluid',
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
    ],
  ];

  // Establecer la nueva configuración.
  $config->set('known_themes', $knownthemes)->save();
}


/**
 * Update the known themes configuration.
 */
function bootstrap_toolbox_update_8004() {
  // Cargar la configuración actual.
  $config = \Drupal::service('config.factory')->getEditable('bootstrap_toolbox.known_themes');

  // Actualizar los valores.
  $knownthemes = [
    'bootstrap_barrio' => [
    'name' => 'Bootstrap Barrio base theme',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '#main',
      'main_area_class' => 'container-fluid',
      'bootstrap_version' => 5,
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
      'toc_selector' => 'aside',
      'sticky_class' => 'sticky-top',
    ],
    'bootstrap5' => [
      'name' => 'Bootstrap 5',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.dialog-off-canvas-main-canvas main div',
      'main_area_class' => 'container-fluid',
      'bootstrap_version' => 5,
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
      'toc_selector' => '.region',
      'sticky_class' => 'sticky-top',
    ],
    'bootstrap' => [
      'name' => 'Bootstrap 3 for Drupal',
      'sidebars_variables' => [
        'sidebar_first',
        'sidebar_second',
      ],
      'main_area_selector' => '.main-container',
      'main_area_class' => 'container-fluid',
      'bootstrap_version' => 3,
      'central_panel_class' => 'container',
      'edit_mode_fields_area' => '.layout-region-node-main',
      'edit_mode_advanced_area' => '.layout-region-node-secondary',
      'edit_mode_fields_area_remove_class' => 'col-md-6',
      'edit_mode_advanced_area_remove_class' => 'col-md-6',
      'toc_selector' => '.region',
      'sticky_class' => 'affix',
    ],
  ];

  // Establecer la nueva configuración.
  $config->set('known_themes', $knownthemes)->save();
}
